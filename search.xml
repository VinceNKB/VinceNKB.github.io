<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[我的游戏日志(1): Ghost Trick(幽灵诡计)]]></title>
      <url>%2Fblog%2F20170101%2F%E6%88%91%E7%9A%84%E6%B8%B8%E6%88%8F%E6%97%A5%E5%BF%97-1-Ghost-Trick-%E5%B9%BD%E7%81%B5%E8%AF%A1%E8%AE%A1%2F</url>
      <content type="text"><![CDATA[作为一个bangumi评分8.9分，游戏区排名第14位的游戏，其品质绝对是极佳的，除了能抓住一批核心玩家之外，也能够吸引到其他普通玩家。第一次看到这个游戏就是在逛bangumi的游戏区时，当时就标记了个“想玩”。但是直到现在才真正通关了这游戏，主要还是因为它是在nds平台的，准备nds模拟器太麻烦了。不过貌似也有ios平台的，这就不太清楚了。总之，趁着元旦这两天，从昨天下午一直推到晚上，再加上今天下午，通关完毕。整体而言的话，这个游戏无论从剧情、悬疑、演出、还是游戏性上都是极其优秀的。特别是挖坑、填坑水平一流，前面的埋下的伏笔到最后基本都有很好的解释。而游戏中使用的trick更是它的灵魂所在。 剧情简介：一个灵魂从昏迷中醒来，发现自己已经被杀死，而自己又失去了之前的全部记忆。而与此同时是，自己尸体旁的不知名女孩正受到杀手的追杀。玩家要操纵这个灵魂，使用灵魂特有的力量“死者之力”，挽救女孩的生命，同时追查自己死亡的原因。时限只有一夜————一旦太阳升起，死者的灵魂就会消散。。。 以下涉及剧透一开始看到题目《ghost trick》，我就开始猜故事里用的到底是什么trick。然后我脑中浮现出的E17中的两个核心trick(具体什么就不说了)。随着剧情的推进，这两个猜测都被否定了。不过必须得说，如果这游戏里使用了以上任意一个trick，那也太没有新意了。。。这个故事最大的悬疑有二：一是主角西塞尔的真实身份到底是什么？死因是什么？二是杀手为什么要杀死凛音，以及从中抽出的一系列人物链。随着故事的深入，我们会发现挖出来的坑越来越多：台灯库纽利是什么来头？十年前发生了什么？为什么乔多的画上是西塞尔？为什么西塞尔要和外国势力交易？交易的内容如何影响国家的命运？导致乔多入狱的5年前的真相是什么？垃圾场地下室的机关布置会和5年前的事故一样？“死者之力”似乎不是西塞尔独有的。到了故事过半，真相才渐渐揭露。具体就不说了。比较印象深刻的一个是西塞尔和尤弥尔不是同一个人，准确的说是香蕉头的尸体不是西塞尔。这里使用的是一个玩家先入为主的trick，因为一开场就看到了仅此一个的尸体，就下意识地认为是自己的尸体。这里其实是有伏笔的，因为剧情前期也有那个谁的灵魂一开始把自己当成其他人了。这个trick我是直到看到垃圾场中尤弥尔的尸体复活才看出来的。另一个是西塞尔本体居然是那只黑猫，这个实在是看不出来，毕竟也算是场外因素。不过之前也做了伏笔，就是导弹的灵魂也有人类的思维这一点。所以这两个trick虽然意外，但也可以很容易让人接受。至于其他剧情方面，基本上很缜密，bug不多，就算有也不是影响关键剧情的那种。还有值得一说的是最后通过取出陨石的尤弥尔的尸体跳跃到10年前，这个真是十足的逆转，玩的时候不禁发出“还有这手”的感叹。最后陨石碎片击中西塞尔并留在它体内，导致它十年里都没有变化，这点也算是给玩家糖了吧。毕竟对英雄没有一点奖励的话也有点说不过去。不过最后西塞尔感觉就和神一样，和凡人玩游戏的态度，感觉有点不爽呢。。 以上涉及剧透 总之，要给这个游戏来个最终评价的话，绝对可以算得上是准神作了（至于神作，在我心目中只有一个，那就是E17），绝对值得一玩。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo与Markdown学习笔记 (3) - Hexo配置与优化]]></title>
      <url>%2Fblog%2F20170101%2FHexo%E4%B8%8EMarkdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-Hexo%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%2F</url>
      <content type="text"><![CDATA[以下列出我在配置Hexo时参考的博客：Hexo系列教程之三：next主题的配置和优化 Hexo的Next主题配置这篇博客讲得很详细。特别是讲了“引入第三方服务”的内容。 添加Google Analytics可以参考百度经验的这篇 Google Analytics新手教程 以及next的wiki 添加 Google 百度 统计我使用了谷歌的Google Analytics Hexo使用多说教程还有另一篇 Hexo使用多说教程]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo与Markdown学习笔记 (2)]]></title>
      <url>%2Fblog%2F20161229%2FHexo%E4%B8%8EMarkdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2%2F</url>
      <content type="text"><![CDATA[Hexo基本操作参考文档 1. Front-matter 参数 描述 默认值 layout 布局 title 标题 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章网址 ###分类和标签只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 categories: Diary Decembertags: PS3 Games 上例中，Diary和December是层次关系，PS3和Games是并列关系。 2. 引用块在文章中插入引言，可包含作者、来源和标题。别号： quotecontent [author[source]] [link] [source_link_title] 如 没有提供参数，则只输出普通的 blockquoteLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. 引用书上的句子Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake 引用 TwitterNEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 引用网络上的文章Every interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing 3. 代码块在文章中插入代码。别名： code[title] [] [url] [link text]1code snippet 普通的代码块1alert(&apos;Hello World!&apos;); 指定语言1[rectangle setX: 10 y: 10 width: 20 height: 20]; 附加说明Array.map1array.map(callback[, thisArg]) 附加说明和网址_.compactUnderscore.js12_.compact([0, 1, false, 2, &apos;&apos;, 3]);=&gt; [1, 2, 3] 自定实例myCodemyCode.java1234void main(String args[])&#123; int a = 0; String str = new String();&#125; 4. 反引号代码块另一种形式的代码块，不同的是它使用三个反引号来包裹。[language] [title] [url] [link text] code snippet 5. Pull Quote在文章中插入 Pull quote。content 6. jsFiddle在文章中嵌入 jsFiddle。 7. Gist在文章中嵌入 Gist。 8. iframe在文章中插入 iframe。 9. Image在文章中插入指定大小的图片。 10. Link在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性。 text url [external] [title] 11. Include Code插入 source 文件夹内的代码文件。 12. Youtube在文章中插入 Youtube 视频。 13. Vimeo在文章中插入 Vimeo 视频。 14. 引用文章引用其他文章的链接。 15. 引用资源引用文章的资源。 16. Raw如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。 content 资源文件夹资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 source/images 文件夹中。然后通过类似于 ![](/images/image.jpg) 的方法访问它们。 如 1. 文章资源文件夹对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 config.yml 文件中的 post_asset_folder 选项设为 true 来打开。 [config.yml]1post_asset_folder: true 当资源文件管理功能打开后，Hexo将会在你每一次通过 hexo new [layout] 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。 2. 相对路径引用的标签插件通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。 以上的代码是不可见的。还没有搞懂怎么在这里显示。 比如 3. 数据文件有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 source/_data 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。 举例来说，在 source/_data 文件夹中新建 menu.yml 文件：Home: /Gallery: /gallery/Archives: /archives/ 如 永久链接（Permalinks）可以在 _config.yml 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。 主题]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo与Markdown学习笔记 (1)]]></title>
      <url>%2Fblog%2F20161228%2FHexo%E4%B8%8EMarkdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1%2F</url>
      <content type="text"><![CDATA[从markdown语法开始参考文档 markdown中可加入html，但在html中的markdown不会生效。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。 段落元素1. 标题：使用类Setext和类atx形式类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题） This is an H1This is an H2类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如： 这是 H1这是 H2这是 H6记住#和后面要有一个空格 2. 区块引用 Blockquotes在每行前加&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. 或者只在段落的第一行加&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. 区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ： This is the first level of quoting. This is nested blockquote. Back to the first level. 引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等： 这是一个标题。 这是第一行列表项。 这是第二行列表项。 给出一些例子代码： return shell_exec(&quot;echo $input | $markdown_script&quot;); 3. 列表Markdown 支持有序列表和无序列表。 无序列表使用星号、加号或是减号作为列表标记 Red Green Blue等同于： Red Green Blue也等同于： Red Green Blue 有序列表则使用数字接着一个英文句点： Bird McHale Parish很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为： Bird McHale Parish如果你的列表标记写成： Bird McHale Parish或甚至是： Bird McHale Parish你都会得到完全相同的 HTML 输出。 如果要在列表项目内放进引用，那 &gt; 就需要缩进： A list item with a blockquote: This is a blockquoteinside a list item. 如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符： 一列表项包含一个列表区块： &lt;代码写在这&gt; 当然，项目列表很可能会不小心产生，像是下面这样的写法： What a great season.换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。 1986. What a great season. 3. 代码区块要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入： 这是一个普通段落： 这是一个代码区块。 这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如： Here is an example of AppleScript: tell application &quot;Foo&quot; beep end tell 一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。 4. 分隔线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： 区段元素1. 链接Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。 不管是哪一种，链接文字都是用 [方括号] 来标记。 要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如： This is an example inline link. This link has no title attribute. 如果你是要链接到同样主机的资源，你可以使用相对路径： See my About page for details. 参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记： This is an example reference-style link.你也可以选择性地在两个方括号中间加上一个空格： This is an example reference-style link.接着，在文件的任意处，你可以把这个标记的链接内容定义出来： 链接内容定义的形式为： 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字接着一个冒号接着一个以上的空格或制表符接着链接的网址选择性地接着 title 内容，可以用单引号、双引号或是括弧包着下面这三种链接的定义都是相同： 链接网址也可以用尖括号包起来： 你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看： &quot;Optional Title Here&quot; 但这个在Hexo中显示的是代码区块 网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。 链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。 下面是一个参考式链接的范例： I get 10 times more traffic from Google than fromYahoo or MSN. 如果改成用链接名称的方式写： I get 10 times more traffic from Google than fromYahoo or MSN. 下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用： I get 10 times more traffic from Googlethan from Yahoo orMSN. 2. 强调Markdown 使用星号（）和底线（_）作为标记强调字词的符号，被 或 包围的字词会被转成用 标签包围，用两个 * 或 包起来的话，则会被转成 ，例如： single asterisks single underscores double asterisks double underscores 你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。unfriggingbelievable但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。 如果要在文字前后直接插入普通的星号或底线，你可以用反斜线： *this text is surrounded by literal asterisks* 3. 代码如果要标记一小段行内代码，你可以用反引号把它包起来（`），例如： Use the printf() function. 如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段： There is a literal backtick (`) here. 代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号： A single backtick in a code span: ` A backtick-delimited string in a code span: `foo` 4. 图片Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。 行内式的图片语法看起来像是： 详细叙述如下： 一个惊叹号 ! 接着一个方括号，里面放上图片的替代文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。 「id」是图片参考的名称，图片参考的定义方式则和连结参考一样： ‘id: url/to/image “Optional title attribute”‘(这里不行啊！！！)到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 标签。 其它1. 自动链接Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如： http://example.com/ 邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如： &#x61;&#x64;&#x64;&#114;&#101;&#115;&#115;&#64;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#99;&#x6f;&#109; 2. 反斜杠Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 标签），你可以在星号的前面加上反斜杠： *literal asterisks* Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： \ 反斜线` 反引号* 星号_ 底线{} 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 还有要补充一些1. 表格很神奇的格式 Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[test]]></title>
      <url>%2Fblog%2F20161228%2Ftest%2F</url>
      <content type="text"><![CDATA[从markdown语法开始 markdown中可加入html，但在html中的markdown不会生效。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.]]></content>
    </entry>

    
  
  
</search>
